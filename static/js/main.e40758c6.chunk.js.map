{"version":3,"sources":["labs/lab1.jsx","labs/lab2.jsx","labs/lab3.jsx","labs/lab4.jsx","labs/lab5.jsx","labs/lab6.jsx","labs/lab7.jsx","labs/lab8.jsx","Home.jsx","App.js","index.js"],"names":["Lab1","useState","defaultH","setH","x1","x2","x3","x4","x5","initialXValues","setInitialXValues","time","xArrays","hArray","deltaArray","numberOfStepsArray","graphsData","setGraphData","p","a","m","u","cx","cy","m1","m2","T","g","constants","setConstants","Euler","step","numberOfSteps","i","t","Math","sin","push","lastValues","calculate","optimal","delta","h","temp","xArraysWithLowerH","lastValuesWithLowerH","newTime","abs","withoutOptimization","data","xLabel","yLabel","map","key","index","x","y","console","log","className","Object","entries","value","defaultValue","onChange","e","target","type","onClick","item","options","scales","xAxes","scaleLabel","display","labelString","yAxes","legend","datasets","fill","borderColor","TRANS","OUT","Lab2","textarea","useRef","z","setZ","setX","setY","useEffect","current","Array","arr","indx","ref","style","width","height","disabled","reverseF","atan","generateRandomValues","n","random","Lab3","setUpd","arraySize","setArraySize","reverseValues","sort","b","statValues","Fvalues","deltaP","min","max","floor","before","Date","now","forEach","FValue","tan","F","statValue","deltaX","parts","minValue","maxValue","size","val","mappedParts","part","V","P","mean","reduce","sum","variance","lambda","sqrt","isOk","FChartData","statChartData","after","inputRef","preventDefault","maxWidth","animation","duration","hover","animationDuration","responsiveAnimationDuration","elements","line","tension","steppedLine","label","pointRadius","pointHitRadius","colSpan","toFixed","color","Kf","Lab4","setU","whiteNoise","X","keys","corrTheoretical","_","exp","corrEmpirical","j","theorData","empirData","Lab5","normalSample","length","v1","v2","s","r","slice","getNormalSample","mean1","X1","corrTheoretical1","corrEmpirical1","theorData1","empirData1","Lab6","arg","Lab7","tau","n_counter","m_counter","ε_p","ε_error","firstAttempt","err","N","M","nRequired","round","secondAttempt","onSubmit","factorial","teorP","leftBottomSum","rightBottomSum","qTeor","Lab8","filter","k","Home","to","App","path","exact","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e40758c6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\n\nimport { Line } from \"react-chartjs-2\";\n\n/* Модель 1 вариант 3 */\n\nconst Lab1 = () => {\n  const [defaultH, setH] = useState(0.1);\n  const [initialXValues, setInitialXValues] = useState({\n    x1: 1800,\n    x2: 0.8,\n    x3: 0,\n    x4: 0,\n    x5: 0.8\n  });\n  const [graphsData, setGraphData] = useState({\n    time: [],\n    xArrays: [],\n    hArray: [],\n    deltaArray: [],\n    numberOfStepsArray: []\n  });\n\n  const [constants, setConstants] = useState({\n    p: 100000,\n    a: 0.5,\n    m: 2000,\n    u: 20,\n    cx: 0.03,\n    cy: 0.002,\n    m1: 0.05,\n    m2: 0.01,\n    T: 12,\n    g: 9.81\n  });\n\n  const { p, a, m, u, cx, cy, m1, m2, T, g } = constants;\n\n  const Euler = step => {\n    const time = [0];\n    let { x1, x2, x3, x4, x5 } = { ...initialXValues };\n\n    const xArrays = {\n      x1: [x1],\n      x2: [x2],\n      x3: [x3],\n      x4: [x4],\n      x5: [x5]\n    };\n\n    let numberOfSteps = 0;\n    for (let i = 0; i <= T; i += step) {\n      numberOfSteps += 1;\n    }\n\n    for (let i = 1; i < numberOfSteps; i++) {\n      const t = i * step;\n\n      x1 += step * (-g * Math.sin(x2) + (p - a * cx * x1 ** 2) / (m - u * t));\n      x2 +=\n        step *\n        ((-g + (p * Math.sin(x5 - x2) + a * cy * x1 ** 2) / (m - u * t)) / x1);\n      x3 +=\n        step *\n        ((m1 * a * (x2 - x5) * x1 ** 2 - m2 * a * x1 ** 2 * x3) / (m - u * t));\n      x4 += step * (x1 * Math.sin(x2));\n      x5 += step * x3;\n\n      xArrays.x1.push(x1);\n      xArrays.x2.push(x2);\n      xArrays.x3.push(x3);\n      xArrays.x4.push(x4);\n      xArrays.x5.push(x5);\n      time.push(t);\n    }\n    const lastValues = { x1, x2, x3, x4, x5 };\n\n    return { xArrays, time, numberOfSteps, lastValues };\n  };\n\n  const calculate = (optimal = false) => {\n    let delta = 100;\n    const deltaArray = [100];\n\n    let h = defaultH;\n    const hArray = [defaultH];\n    let temp = 0;\n    for (let i = 0; i < T + h; i += h) {\n      temp += 1;\n    }\n\n    let time,\n      xArrays,\n      numberOfStepsArray = [temp];\n\n    if (optimal) {\n      while (delta > 0.001) {\n        const { lastValues } = Euler(h);\n\n        const {\n          xArrays: xArraysWithLowerH,\n          lastValues: lastValuesWithLowerH,\n          time: newTime,\n          numberOfSteps\n        } = Euler(h / 2);\n        numberOfStepsArray.push(numberOfSteps);\n        time = newTime;\n\n        xArrays = xArraysWithLowerH;\n        delta = Math.abs(\n          (lastValues.x4 - lastValuesWithLowerH.x4) / lastValuesWithLowerH.x4\n        );\n\n        h = h / 2;\n        hArray.push(h);\n        deltaArray.push(delta);\n      }\n    } else {\n      const withoutOptimization = Euler(h);\n      xArrays = withoutOptimization.xArrays;\n      time = withoutOptimization.time;\n      numberOfStepsArray = [withoutOptimization.numberOfSteps];\n    }\n\n    return { xArrays, time, numberOfStepsArray, hArray, deltaArray, h };\n  };\n\n  const {\n    time,\n    xArrays,\n    hArray,\n    deltaArray = [],\n    numberOfStepsArray\n  } = graphsData;\n\n  const data1 = {\n    xLabel: \"Время\",\n    yLabel: \"x1\",\n    data: time.map((key, index) => ({ x: key, y: xArrays.x1[index] }))\n  };\n  const data2 = {\n    xLabel: \"Время\",\n    yLabel: \"x2\",\n    data: time.map((key, index) => ({ x: key, y: xArrays.x2[index] }))\n  };\n  const data3 = {\n    xLabel: \"Время\",\n    yLabel: \"x3\",\n    data: time.map((key, index) => ({ x: key, y: xArrays.x3[index] }))\n  };\n  const data4 = {\n    xLabel: \"Время\",\n    yLabel: \"x4\",\n    data: time.map((key, index) => ({ x: key, y: xArrays.x4[index] }))\n  };\n  const data5 = {\n    xLabel: \"Время\",\n    yLabel: \"x5\",\n    data: time.map((key, index) => ({ x: key, y: xArrays.x5[index] }))\n  };\n\n  const dataDelta = {\n    xLabel: \"Шаг\",\n    yLabel: \"delta\",\n    data: hArray.map((key, index) => ({ x: key, y: deltaArray[index] }))\n  };\n  const dataSteps = {\n    xLabel: \"Шаг\",\n    yLabel: \"Количество шагов\",\n    data: hArray.map((key, index) => ({ x: key, y: numberOfStepsArray[index] }))\n  };\n\n  const data = [data1, data2, data3, data4, data5, dataDelta, dataSteps];\n\n  console.log(constants, graphsData, defaultH);\n  return (\n    <>\n      <header>\n        <div className=\"parametersWrapper\">\n          <h2>Значения коэффициентов</h2>\n          <ul className=\"list\">\n            {Object.entries(constants).map(([key, value], index) => {\n              return (\n                <li key={index}>\n                  <label>\n                    <span className=\"inputLabel\">{key}</span>\n                    <input\n                      defaultValue={value}\n                      onChange={e => {\n                        setConstants({\n                          ...constants,\n                          [key]: +e.target.value\n                        });\n                      }}\n                    />\n                  </label>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"parametersWrapper\">\n          <h2>Начальные значения</h2>\n          <ul className=\"list\">\n            {Object.entries(initialXValues).map(([key, value], index) => {\n              return (\n                <li key={index}>\n                  <label>\n                    <span className=\"inputLabel\">\n                      x<sub>{key}</sub>\n                    </span>\n                    <input\n                      defaultValue={value}\n                      onChange={e => {\n                        setInitialXValues({\n                          ...initialXValues,\n                          [key]: +e.target.value\n                        });\n                      }}\n                    />\n                  </label>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </header>\n      <div>\n        <input\n          type=\"button\"\n          onClick={() => setGraphData(calculate(false))}\n          value=\"Посчитать с заданным шагом\"\n        />\n        <input\n          defaultValue={defaultH}\n          onChange={e => {\n            setH(+e.target.value);\n          }}\n        />\n      </div>\n      <input\n        type=\"button\"\n        onClick={() => setGraphData(calculate(true))}\n        value=\"Посчитать с точностью 1%\"\n      />\n\n      <div className=\"gridContainer\">\n        {data.map((item, key) => (\n          <div key={key}>\n            <Line\n              options={{\n                scales: {\n                  xAxes: [\n                    {\n                      type: \"linear\",\n                      scaleLabel: {\n                        display: true,\n                        labelString: item.xLabel\n                      }\n                    }\n                  ],\n                  yAxes: [\n                    {\n                      scaleLabel: {\n                        display: true,\n                        labelString: item.yLabel\n                      }\n                    }\n                  ]\n                },\n                legend: {\n                  display: false\n                }\n              }}\n              data={{\n                datasets: [\n                  {\n                    data: item.data,\n                    fill: false,\n                    borderColor: \"blue\"\n                  }\n                ]\n              }}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Lab1;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"../App.css\";\n\n/* \nВариант 3 - автомат Мили\nВходов - 2\nВыходов - 2\nСостояний - 4\n*/\n\nconst TRANS = [\n  [3, 2, 1, 0],\n  [1, 0, 3, 2]\n];\n\nconst OUT = [\n  [0, 0, 1, 1],\n  [0, 1, 1, 0]\n];\n\nconst Lab2 = () => {\n  const textarea = useRef(null);\n\n  const [z, setZ] = useState(0);\n  const [x, setX] = useState(\"-\");\n  const [y, setY] = useState(\"-\");\n\n  useEffect(() => {\n    if (x !== \"-\") {\n      textarea.current.value += `Вход X${x + 1} -> Состояние Z${z +\n        1} -> Выход Y${y + 1}\\n`;\n    }\n  });\n  return (\n    <div>\n      <p>Таблица переходов</p>\n      <table>\n        <tbody>\n          <tr>\n            <td />\n            {[...new Array(4)].map((item, i) => (\n              <th key={i}>\n                Z<sub>{i + 1}</sub>\n              </th>\n            ))}\n          </tr>\n          {TRANS.map((arr, i) => {\n            return (\n              <tr key={i}>\n                <th>\n                  X<sub>{i + 1}</sub>\n                </th>\n                {arr.map((item, indx) => (\n                  <td key={indx}>\n                    Z<sub>{item + 1}</sub>\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <p>Таблица выходов</p>\n      <table>\n        <tbody>\n          <tr>\n            <td />\n            {[...new Array(4)].map((item, i) => (\n              <th key={i}>\n                Z<sub>{i + 1}</sub>\n              </th>\n            ))}\n          </tr>\n          {OUT.map((arr, i) => {\n            return (\n              <tr key={i}>\n                <th>\n                  X<sub>{i + 1}</sub>\n                </th>\n                {arr.map((item, indx) => (\n                  <td key={indx}>\n                    Y<sub>{item + 1}</sub>\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <p>\n        Текущее состояние автомата - <b>X{z + 1}</b>\n      </p>\n      <div>\n        {[...new Array(2)].map((item, i) => {\n          return (\n            <input\n              key={i}\n              type=\"button\"\n              onClick={() => {\n                setZ(TRANS[i][z]);\n                setX(i);\n                setY(OUT[i][z]);\n              }}\n              value={`Подать на вход X${i + 1}`}\n            />\n          );\n        })}\n      </div>\n      <textarea\n        ref={textarea}\n        style={{ width: \"320px\", height: \"300px\" }}\n        disabled\n      ></textarea>\n    </div>\n  );\n};\n\nexport default Lab2;\n","import React, { useState, useRef } from 'react';\nimport '../App.css';\nimport { Line } from 'react-chartjs-2';\nimport Zoom from 'chartjs-plugin-zoom';\n\n/* \nВариант 3 \nКритерий согласия Колмогорова\n*/\nconst analyticExpectedValue = 0.438;\nconst analyticVariance = 0.053;\n// const min = 0;\n// const max = Math.PI / 4;\nconst constLambda = 1.22;\nconst constP = 0.1;\n\n/* Плотность распределения */\nconst f = x => {\n    return 1 / (1 - Math.sin(x) ** 2);\n};\n\n/* Функция распределения */\nconst F = x => Math.tan(x);\n\n/* Обратная первообразной функция*/\nconst reverseF = x => Math.atan(x);\n\n/* Статистическая функция распределения */\n// const statFunction = sortedArr => {\n//     const len = sortedArr.length;\n//     const res = sortedArr.map((_, index) => (index + 1) / len);\n//     return res;\n// };\n\nexport const generateRandomValues = n => {\n    return [...new Array(n)].map(() => {\n        return Math.random();\n    });\n};\n\nconst Lab3 = () => {\n    const [u, setUpd] = useState(true);\n    const [arraySize, setArraySize] = useState(50);\n\n    /* Генерируем arraySize случайных чисел */\n    const randomNumbers = generateRandomValues(arraySize).sort((a, b) => a - b);\n\n    /* Находим значения обратной функции */\n    const reverseValues = randomNumbers.map(reverseF);\n\n    const statValues = [];\n    const Fvalues = [];\n    let deltaP = 0;\n    let min = 1;\n    let max = 0;\n\n    const m = arraySize > 500 ? 30 : Math.floor(arraySize / (15 / 20));\n\n    const before = Date.now();\n    reverseValues.forEach((x, index) => {\n        const FValue = F(x);\n\n        if (FValue < min) {\n            min = FValue;\n        }\n\n        if (FValue > max) {\n            max = FValue;\n        }\n        const statValue = (index + 1) / arraySize;\n\n        const delta = Math.abs(FValue - statValue);\n\n        if (delta > deltaP) {\n            deltaP = delta;\n        }\n\n        statValues.push(statValue);\n        Fvalues.push(FValue);\n    });\n\n    const deltaX = (max - min) / m;\n\n    const parts = [];\n\n    let i = 0;\n\n    while (i < m) {\n        const minValue = min + deltaX * i;\n        const maxValue = minValue + deltaX;\n        parts[i] = {\n            minValue,\n            maxValue,\n            data: [],\n            size: 0\n        };\n        i++;\n    }\n\n    reverseValues.forEach(val => {\n        parts.forEach(item => {\n            const { minValue, maxValue } = item;\n            if (val >= minValue && val <= maxValue) {\n                item.size += 1;\n                item.data.push(val);\n            }\n        });\n    });\n\n    const mappedParts = parts.map(part => ({\n        V: (part.minValue + part.maxValue) / 2,\n        P: part.size / arraySize\n    }));\n\n    const mean = mappedParts.reduce((sum, item) => sum + item.P * item.V, 0);\n    const variance = mappedParts.reduce(\n        (sum, item) => sum + item.P * (item.V - mean) ** 2,\n        0\n    );\n\n    const lambda = deltaP * Math.sqrt(arraySize);\n    const isOk = lambda <= constLambda;\n\n    /* Преобразуем в формат графика */\n    const FChartData = reverseValues.map((item, i) => ({\n        x: item,\n        y: Fvalues[i]\n    }));\n\n    const statChartData = reverseValues.map((item, i) => ({\n        x: item,\n        y: statValues[i]\n    }));\n\n    const after = Date.now();\n    console.log('Time', after - before);\n\n    const inputRef = useRef();\n    return (\n        <div>\n            <label>\n                <div>Размер выборки</div>\n                <input ref={inputRef} type=\"number\" defaultValue={arraySize} />\n                <button\n                    onClick={e => {\n                        e.preventDefault();\n                        setArraySize(+inputRef.current.value);\n\n                        setUpd(!u);\n                    }}\n                >\n                    Сгенерировать\n                </button>\n            </label>\n            <div style={{ maxWidth: '700px' }}>\n                <Line\n                    options={{\n                        animation: {\n                            duration: 0\n                        },\n                        hover: {\n                            animationDuration: 0\n                        },\n                        responsiveAnimationDuration: 0,\n                        elements: {\n                            line: {\n                                tension: 0\n                            }\n                        },\n                        scales: {\n                            xAxes: [\n                                {\n                                    type: 'linear',\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 'Xi'\n                                    }\n                                }\n                            ],\n                            yAxes: [\n                                {\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 'F(x)'\n                                    }\n                                }\n                            ]\n                        },\n                        legend: {\n                            display: true\n                        }\n                    }}\n                    data={{\n                        datasets: [\n                            {\n                                data: statChartData,\n                                steppedLine: true,\n\n                                fill: false,\n                                borderColor: 'blue',\n                                label: 'F*(x)',\n                                pointRadius: 0,\n                                pointHitRadius: 0\n                            },\n                            {\n                                data: FChartData,\n                                steppedLine: true,\n                                fill: false,\n                                borderColor: 'green',\n                                label: 'F(x)',\n                                pointRadius: 0,\n                                pointHitRadius: 0\n                            }\n                        ]\n                    }}\n                />\n            </div>\n\n            <table>\n                <tbody>\n                    <tr>\n                        <th>\n                            Δ<sub>p</sub>\n                        </th>\n                        <td colSpan={2}>{deltaP.toFixed(3)}</td>\n                    </tr>\n                    <tr>\n                        <th>\n                            λ<sub>p</sub>\n                        </th>\n                        <td colSpan={2}>\n                            <b style={{ color: isOk ? 'green' : 'red' }}>\n                                {lambda.toFixed(4)}\n                            </b>\n                            <b>\n                                {isOk ? '⩽' : '>'} {constLambda}\n                            </b>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th colSpan={3}>Параметры распределения</th>\n                    </tr>\n                    <tr>\n                        <th></th>\n                        <th>Теоретический</th>\n                        <th>Эмпирический</th>\n                    </tr>\n\n                    <tr>\n                        <th>Мат. ожидание</th>\n                        <th>{analyticExpectedValue}</th>\n                        <th>{mean.toFixed(3)}</th>\n                    </tr>\n                    <tr>\n                        <th>Дисперсия</th>\n                        <th>{analyticVariance}</th>\n                        <th>{variance.toFixed(3)}</th>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Lab3;\n","import React, { useState } from 'react';\nimport '../App.css';\nimport { Line } from 'react-chartjs-2';\nimport { generateRandomValues } from './lab3';\n/* Вариант 3 */\n\nconst D = 0.5;\nconst alpha = 2;\nconst h = 0.002;\nconst S0 = h / 12;\nconst Kf = Math.sqrt((2 * D) / alpha / S0);\nconst Tf = 1 / alpha;\n\nconst Lab4 = () => {\n    const [n, setN] = useState(10000);\n    const [u, setU] = useState(true);\n    const whiteNoise = generateRandomValues(n).map(item => item - 0.5);\n    let mean = 0;\n    const X = new Array(n).fill(0);\n    for (let i of [...Array(n - 1).keys()]) {\n        X[i + 1] = X[i] + h * ((Kf / Tf) * whiteNoise[i] - (1 / Tf) * X[i]);\n        mean += X[i + 1];\n    }\n    mean /= n;\n    const nsteps = 3 / alpha / h;\n    const corrTheoretical = new Array(nsteps)\n        .fill(0)\n        .map((_, i) => D * Math.exp(-alpha * i * h));\n    const corrEmpirical = [];\n    for (let j of [...Array(nsteps).keys()]) {\n        let sum = 0;\n        for (let i of [...Array(n - j).keys()]) {\n            sum += (X[i] - mean) * (X[i + j] - mean);\n        }\n        sum /= n + 1 - j;\n        corrEmpirical.push(sum);\n    }\n    const theorData = corrTheoretical.map((item, index) => ({\n        x: index,\n        y: item\n    }));\n    const empirData = corrEmpirical.map((item, index) => ({\n        x: index,\n        y: item\n    }));\n\n    return (\n        <div>\n            <label>\n                <div>Размер выборки {n}</div>\n                {/* <input\n                    type=\"number\"\n                    defaultValue={n}\n                    onKeyPress={e => {\n                        if (e.key === 'Enter') {\n                            const val = +e.target.value;\n                            console.log(val, nsteps);\n                            if (val < nsteps) {\n                                e.target.value = 750;\n                                return;\n                            }\n                            setU(!u);\n                            setN(+e.target.value);\n                        }\n                    }}\n                /> */}\n                <button onClick={() => setU(!u)}>Сгенерировать</button>\n            </label>\n            <div style={{ maxWidth: '700px' }}>\n                <Line\n                    options={{\n                        animation: {\n                            duration: 0\n                        },\n                        hover: {\n                            animationDuration: 0\n                        },\n                        responsiveAnimationDuration: 0,\n                        elements: {\n                            line: {\n                                tension: 0\n                            }\n                        },\n                        scales: {\n                            xAxes: [\n                                {\n                                    type: 'linear',\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 't'\n                                    }\n                                }\n                            ],\n                            yAxes: [\n                                {\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 'K(t)'\n                                    }\n                                }\n                            ]\n                        },\n                        legend: {\n                            display: true\n                        }\n                    }}\n                    data={{\n                        datasets: [\n                            {\n                                data: theorData,\n                                steppedLine: true,\n                                fill: false,\n                                borderColor: 'blue',\n                                label: 'Теор. K(t)',\n                                pointRadius: 0,\n                                pointHitRadius: 0\n                            },\n                            {\n                                data: empirData,\n                                steppedLine: true,\n                                fill: false,\n                                borderColor: 'green',\n                                label: 'Эмпирическая K*(t)',\n                                pointRadius: 0,\n                                pointHitRadius: 0\n                            }\n                        ]\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Lab4;\n","import React, { useState } from 'react';\nimport { generateRandomValues } from './lab3';\nimport { Line } from 'react-chartjs-2';\n\nfunction factorial(n) {\n    return n != 1 ? n * factorial(n - 1) : 1;\n}\n\nconst D = 1;\nconst alpha = 1;\nconst h = 0.002;\nconst n = 10000;\nconst nsteps = 3 / alpha / h;\n\nconst S0 = h;\nconst Kf = Math.sqrt((2 * D) / alpha / S0);\nconst Tf = 1 / alpha;\n\n/*********** */\nconst getNormalSample = size => {\n    const normalSample = [];\n\n    while (normalSample.length < size) {\n        const uniSample = generateRandomValues(2);\n        const [v1, v2] = uniSample.map(item => 2 * item - 1);\n        const s = v1 ** 2 + v2 ** 2;\n\n        if (s >= 1) {\n            continue;\n        }\n\n        const r = Math.sqrt((-2 * Math.log(s)) / s);\n\n        normalSample.push(r * v1);\n        normalSample.push(r * v2);\n    }\n\n    return normalSample.slice(0, size);\n};\n\nconst towardUniform = sample => {\n    let rightFactor = 0;\n\n    for (let i of [...Array(30).keys()]) {\n        rightFactor +=\n            (Math.pow(-1, i) * Math.pow(sample, i * 2)) /\n            Math.pow(2, i) /\n            factorial(i) /\n            (i * 2 + 1);\n    }\n\n    return 0.5 + (sample / Math.sqrt(2 * Math.PI)) * rightFactor;\n};\n\nconst Lab5 = () => {\n    const [u, setU] = useState(true);\n    const whiteNoise = getNormalSample(n);\n\n    let mean1 = 0;\n    const X1 = new Array(n).fill(0);\n    for (let i of [...Array(n - 1).keys()]) {\n        X1[i + 1] = X1[i] + h * ((Kf / Tf) * whiteNoise[i] - (1 / Tf) * X1[i]);\n        mean1 += X1[i + 1];\n    }\n    console.log(X1);\n    mean1 /= n;\n    const corrTheoretical1 = new Array(nsteps)\n        .fill(0)\n        .map((_, i) => D * Math.exp(-alpha * i * h));\n    const corrEmpirical1 = [];\n    for (let j of [...Array(nsteps).keys()]) {\n        let sum = 0;\n        for (let i of [...Array(n - j).keys()]) {\n            sum += (X1[i] - mean1) * (X1[i + j] - mean1);\n        }\n        sum /= n + 1 - j;\n        corrEmpirical1.push(sum);\n    }\n\n    const theorData1 = corrTheoretical1.map((item, index) => ({\n        x: index,\n        y: item\n    }));\n    const empirData1 = corrEmpirical1.map((item, index) => ({\n        x: index,\n        y: item\n    }));\n\n    /************ */\n    return (\n        <div>\n            <button onClick={() => setU(!u)}>Сгенерировать</button>\n\n            <p>После формирующего фильтра</p>\n            <div style={{ maxWidth: '700px' }}>\n                <Line\n                    options={{\n                        animation: {\n                            duration: 0\n                        },\n                        hover: {\n                            animationDuration: 0\n                        },\n                        responsiveAnimationDuration: 0,\n                        elements: {\n                            line: {\n                                tension: 0\n                            }\n                        },\n                        scales: {\n                            xAxes: [\n                                {\n                                    type: 'linear',\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 't'\n                                    }\n                                }\n                            ],\n                            yAxes: [\n                                {\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 'K(t)'\n                                    }\n                                }\n                            ]\n                        },\n                        legend: {\n                            display: true\n                        }\n                    }}\n                    data={{\n                        datasets: [\n                            {\n                                data: theorData1,\n                                steppedLine: true,\n\n                                fill: false,\n                                borderColor: 'blue',\n                                label: 'Теор. K(t)',\n                                pointRadius: 0,\n                                pointHitRadius: 0\n                            },\n                            {\n                                data: empirData1,\n                                steppedLine: true,\n\n                                fill: false,\n                                borderColor: 'green',\n                                label: 'Эмпирическая K*(t)',\n                                pointRadius: 0,\n                                pointHitRadius: 0\n                            }\n                        ]\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Lab5;\n","import React from 'react';\n\nconst Lab6 = () => {\n    return <div></div>;\n};\n\nexport default Lab6;\n","import React, { useState, useRef } from 'react';\n\nconst teorQ = 0.43;\nconst teorP = 0.57;\n\nconst lambda = 15;\nconst mu = 20;\nconst targetError = 0.01;\n\nconst delta = arg => {\n    return -Math.log(1 - Math.random()) / arg;\n};\n\nconst Lab7 = () => {\n    const [u, setU] = useState(true);\n\n    let t = delta(lambda);\n    let tau = t + delta(mu);\n    let n_counter = 1;\n    let m_counter = 1;\n\n    while (t < 100) {\n        t += delta(lambda);\n        n_counter += 1;\n\n        if (t > tau) {\n            m_counter += 1;\n            tau = t + delta(mu);\n        }\n    }\n\n    let ε_p = m_counter / n_counter;\n    let ε_error = 3 * Math.sqrt((ε_p * (1 - ε_p)) / n_counter);\n    const firstAttempt = {\n        err: ε_error,\n        p: ε_p,\n        t,\n        N: n_counter,\n        M: m_counter\n    };\n\n    while (ε_error > targetError) {\n        let nRequired = Math.round((9 * ε_p * (1 - ε_p)) / targetError ** 2);\n        for (let i of [...Array(nRequired).keys()]) {\n            t += delta(lambda);\n            n_counter += 1;\n\n            if (t > tau) {\n                m_counter += 1;\n\n                tau = t + delta(mu);\n            }\n        }\n\n        ε_p = m_counter / n_counter;\n        ε_error = 3 * Math.sqrt((ε_p * (1 - ε_p)) / n_counter);\n    }\n\n    const secondAttempt = {\n        err: ε_error,\n        p: ε_p,\n        t,\n        N: n_counter,\n        M: m_counter\n    };\n    return (\n        <div>\n            <form\n                onSubmit={e => {\n                    e.preventDefault();\n                    setU(!u);\n                }}\n            >\n                <button type=\"submit\">Смоделировать</button>\n            </form>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>λ</td>\n                        <td>{lambda}</td>\n                    </tr>\n                    <tr>\n                        <td>μ</td>\n                        <td>{mu}</td>\n                    </tr>\n                    <tr>\n                        <td>p</td>\n                        <td>{teorP}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <table>\n                <tbody>\n                    <tr>\n                        <td></td>\n                        <td>За 100 с.</td>\n                        <td>\n                            Спустя{' '}\n                            {(secondAttempt.t - firstAttempt.t).toFixed(0)} с.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>t</td>\n                        <td>{firstAttempt.t.toFixed(0)}</td>\n                        <td>{secondAttempt.t.toFixed(0)}</td>\n                    </tr>\n                    <tr>\n                        <td>ε*</td>\n                        <td>{firstAttempt.err}</td>\n                        <td>{secondAttempt.err}</td>\n                    </tr>\n\n                    <tr>\n                        <td>N</td>\n                        <td>{firstAttempt.N}</td>\n                        <td>{secondAttempt.N}</td>\n                    </tr>\n                    <tr>\n                        <td>M</td>\n                        <td>{firstAttempt.M}</td>\n                        <td>{secondAttempt.M}</td>\n                    </tr>\n                    <tr>\n                        <td>p*</td>\n                        <td>{firstAttempt.p}</td>\n                        <td>{secondAttempt.p}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Lab7;\n","import React, { useState, useRef } from 'react';\n\nconst teorQ = 0.43;\n\nconst lambda = 15;\nconst mu = 20;\nconst targetError = 0.01;\nconst n = 3;\nconst m = 1;\nfunction factorial(n) {\n    if (n === 0) {\n        return 1;\n    }\n    return n != 1 ? n * factorial(n - 1) : 1;\n}\n\nconst qTeor = () => {\n    let leftBottomSum = 0;\n\n    for (let index of [...Array(n + 1).keys()]) {\n        leftBottomSum += (lambda / mu) ** index / factorial(index);\n    }\n\n    let rightBottomSum = 0;\n    for (let index of [...Array(m + 1).keys()]) {\n        if (index === 0) {\n            continue;\n        }\n\n        rightBottomSum +=\n            (lambda / mu) ** (n + index) / (factorial(n) * n ** index);\n    }\n\n    return (\n        (lambda / mu) ** (n + m) /\n        (factorial(n) * n ** m) /\n        (leftBottomSum + rightBottomSum)\n    );\n};\n\nconst teorP = 1 - qTeor();\n\nconst delta = arg => {\n    return -Math.log(1 - Math.random()) / arg;\n};\n\nconst Lab8 = () => {\n    const [u, setU] = useState(true);\n    let r = 0;\n\n    let t = 0;\n    let tau = Array(n).fill(0);\n    let N = 0;\n    let M = 0;\n\n    let ε_p = 0;\n    let ε_error = 0;\n    while (t < 100) {\n        t += delta(lambda);\n        N += 1;\n\n        const temp = t;\n\n        if (tau.filter(item => temp < item).length === n && r < m) {\n            r += 1;\n        }\n\n        for (let i of [...Array(n).keys()]) {\n            let temp = t;\n            if (t > tau[i]) {\n                if (r !== 0) {\n                    r -= 1;\n                }\n                let k = 1;\n                if (n !== 1) {\n                    k = tau.filter(item => temp < item).length;\n                }\n                tau[i] = t + delta(mu * k);\n                M += 1;\n                break;\n            }\n        }\n\n        ε_p = M / N;\n        ε_error = 3 * Math.sqrt((ε_p * (1 - ε_p)) / N);\n    }\n    const firstAttempt = {\n        err: ε_error,\n        p: ε_p,\n        t,\n        N: N,\n        M: M\n    };\n\n    while (ε_error > targetError) {\n        let nRequired = Math.round((9 * ε_p * (1 - ε_p)) / targetError ** 2);\n\n        for (let i of [...Array(nRequired).keys()]) {\n            t += delta(lambda);\n            N += 1;\n            const temp = t;\n\n            if (tau.filter(item => temp < item).length === n && r < m) {\n                r += 1;\n            }\n\n            for (let i of [...Array(n).keys()]) {\n                const temp = t;\n                if (t > tau[i]) {\n                    if (r !== 0) {\n                        r -= 1;\n                    }\n\n                    let k = 1;\n\n                    if (n !== 1) {\n                        k = tau.filter(item => temp < item).length;\n                    }\n\n                    tau[i] = t + delta(mu * k);\n                    M += 1;\n\n                    break;\n                }\n            }\n        }\n\n        ε_p = M / N;\n        ε_error = 3 * Math.sqrt((ε_p * (1 - ε_p)) / N);\n    }\n\n    const secondAttempt = {\n        err: ε_error,\n        p: ε_p,\n        t,\n        N: N,\n        M: M\n    };\n\n    return (\n        <div>\n            <form\n                onSubmit={e => {\n                    e.preventDefault();\n                    setU(!u);\n                }}\n            >\n                <button type=\"submit\">Смоделировать</button>\n            </form>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>λ</td>\n                        <td>{lambda}</td>\n                    </tr>\n                    <tr>\n                        <td>μ</td>\n                        <td>{mu}</td>\n                    </tr>\n                    <tr>\n                        <td>p</td>\n                        <td>{teorP}</td>\n                    </tr>\n                    <tr>\n                        <td>m</td>\n                        <td>{m}</td>\n                    </tr>\n                    <tr>\n                        <td>n</td>\n                        <td>{n}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <table>\n                <tbody>\n                    <tr>\n                        <td></td>\n                        <td>За 100 с.</td>\n                        <td>\n                            Спустя{' '}\n                            {(secondAttempt.t - firstAttempt.t).toFixed(0)} с.\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>t</td>\n                        <td>{firstAttempt.t.toFixed(0)}</td>\n                        <td>{secondAttempt.t.toFixed(0)}</td>\n                    </tr>\n                    <tr>\n                        <td>ε*</td>\n                        <td>{firstAttempt.err}</td>\n                        <td>{secondAttempt.err}</td>\n                    </tr>\n\n                    <tr>\n                        <td>N</td>\n                        <td>{firstAttempt.N}</td>\n                        <td>{secondAttempt.N}</td>\n                    </tr>\n                    <tr>\n                        <td>M</td>\n                        <td>{firstAttempt.M}</td>\n                        <td>{secondAttempt.M}</td>\n                    </tr>\n                    <tr>\n                        <td>p*</td>\n                        <td>{firstAttempt.p}</td>\n                        <td>{secondAttempt.p}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Lab8;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    return (\n        <ol>\n            <li>\n                <Link to=\"/lab1\">\n                    Программная реализация имитационной модели нелинейной\n                    динамической системы\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/lab2\">\n                    Имитационное моделирование детерменированного конечного\n                    автомата\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/lab3\">\n                    Проектирование генератора случайных чисел с заданным законом\n                    распределения\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/lab4\">\n                    Построение генератора случайного процесса методом\n                    формирующего фильтра\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/lab5\">\n                    Построение генератора случайного процесса с заданным законом\n                    распределения и корреляционной функцией\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/lab6\">\n                    Проверка стационарности и эргодичности случайного процесса\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/lab7\">\n                    Статистическое имитационное моделирование одноканальной\n                    системы массового обслуживания с отказами\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/lab8\">\n                    Статистическое имитационное моделирование многоканальной\n                    системы массового обслуживания\n                </Link>\n            </li>\n        </ol>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Lab1 from './labs/lab1';\nimport Lab2 from './labs/lab2';\nimport Lab3 from './labs/lab3';\nimport Lab4 from './labs/lab4';\nimport Lab5 from './labs/lab5';\nimport Lab6 from './labs/lab6';\nimport Lab7 from './labs/lab7';\nimport Lab8 from './labs/lab8';\n\nimport Home from './Home';\n\n/* Модель 1 вариант 3 */\n\nconst App = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/:any\">\n                    <div>\n                        <Link to=\"/\">К списку работ</Link>\n                    </div>\n                </Route>\n            </Switch>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route path=\"/lab1\">\n                    <Lab1 />\n                </Route>\n                <Route path=\"/lab2\">\n                    <Lab2 />\n                </Route>\n                <Route path=\"/lab3\">\n                    <Lab3 />\n                </Route>\n                <Route path=\"/lab4\">\n                    <Lab4 />\n                </Route>\n                <Route path=\"/lab5\">\n                    <Lab5 />\n                </Route>\n                <Route path=\"/lab6\">\n                    <Lab6 />\n                </Route>\n                <Route path=\"/lab7\">\n                    <Lab7 />\n                </Route>\n                <Route path=\"/lab8\">\n                    <Lab8 />\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}